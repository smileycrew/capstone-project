{"ast":null,"code":"var _jsxFileName = \"/Users/edwin.moz/workspace/capstone-project/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createUser } from \"../services/userServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = props => {\n  _s();\n  const [customer, setCustomer] = useState({\n    email: \"\",\n    fullName: \"\",\n    isStaff: false\n  });\n  let navigate = useNavigate();\n  const registerNewUser = () => {\n    createUser(customer).then(createdUser => {\n      if (createdUser.hasOwnProperty(\"id\")) {\n        localStorage.setItem(\"honey_user\", JSON.stringify({\n          id: createdUser.id,\n          staff: createdUser.isStaff\n        }));\n        navigate(\"/\");\n      }\n    });\n  };\n  const handleRegister = e => {\n    e.preventDefault();\n    getUserByEmail(customer.email).then(response => {\n      if (response.length > 0) {\n        // Duplicate email. No good.\n        window.alert(\"Account with that email address already exists\");\n      } else {\n        // Good email, create user.\n        registerNewUser();\n      }\n    });\n  };\n  const updateCustomer = evt => {\n    const copy = {\n      ...customer\n    };\n    copy[evt.target.id] = evt.target.value;\n    setCustomer(copy);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-login\",\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Honey Rae Repairs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Please Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: updateCustomer,\n            type: \"text\",\n            id: \"fullName\",\n            className: \"form-control\",\n            placeholder: \"Enter your name\",\n            required: true,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: updateCustomer,\n            type: \"email\",\n            id: \"email\",\n            className: \"form-control\",\n            placeholder: \"Email address\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: evt => {\n                const copy = {\n                  ...customer\n                };\n                copy.isStaff = evt.target.checked;\n                setCustomer(copy);\n              },\n              type: \"checkbox\",\n              id: \"isStaff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), \"I am an employee\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-btn btn-info\",\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"5ln6FiYLCFiz6JvsAWTdWpFaZRU=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useNavigate","createUser","jsxDEV","_jsxDEV","Register","props","_s","customer","setCustomer","email","fullName","isStaff","navigate","registerNewUser","then","createdUser","hasOwnProperty","localStorage","setItem","JSON","stringify","id","staff","handleRegister","e","preventDefault","getUserByEmail","response","length","window","alert","updateCustomer","evt","copy","target","value","style","textAlign","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","required","autoFocus","checked","_c","$RefreshReg$"],"sources":["/Users/edwin.moz/workspace/capstone-project/src/components/Register.js"],"sourcesContent":["import { useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { createUser } from \"../services/userServices\"\n\nexport const Register = (props) => {\n    const [customer, setCustomer] = useState({\n        email: \"\",\n        fullName: \"\",\n        isStaff: false,\n    })\n    let navigate = useNavigate()\n\n    const registerNewUser = () => {\n        createUser(customer).then((createdUser) => {\n            if (createdUser.hasOwnProperty(\"id\")) {\n                localStorage.setItem(\n                    \"honey_user\",\n                    JSON.stringify({\n                        id: createdUser.id,\n                        staff: createdUser.isStaff,\n                    })\n                )\n\n                navigate(\"/\")\n            }\n        })\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n        getUserByEmail(customer.email).then((response) => {\n            if (response.length > 0) {\n                // Duplicate email. No good.\n                window.alert(\"Account with that email address already exists\")\n            } else {\n                // Good email, create user.\n                registerNewUser()\n            }\n        })\n    }\n\n    const updateCustomer = (evt) => {\n        const copy = { ...customer }\n        copy[evt.target.id] = evt.target.value\n        setCustomer(copy)\n    }\n\n    return (\n        <main style={{ textAlign: \"center\" }}>\n            <form className=\"form-login\" onSubmit={handleRegister}>\n                <h1>Honey Rae Repairs</h1>\n                <h2>Please Register</h2>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <input\n                            onChange={updateCustomer}\n                            type=\"text\"\n                            id=\"fullName\"\n                            className=\"form-control\"\n                            placeholder=\"Enter your name\"\n                            required\n                            autoFocus\n                        />\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <input\n                            onChange={updateCustomer}\n                            type=\"email\"\n                            id=\"email\"\n                            className=\"form-control\"\n                            placeholder=\"Email address\"\n                            required\n                        />\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label>\n                            <input\n                                onChange={(evt) => {\n                                    const copy = { ...customer }\n                                    copy.isStaff = evt.target.checked\n                                    setCustomer(copy)\n                                }}\n                                type=\"checkbox\"\n                                id=\"isStaff\"\n                            />\n                            I am an employee{\" \"}\n                        </label>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <button className=\"login-btn btn-info\" type=\"submit\">\n                            Register\n                        </button>\n                    </div>\n                </fieldset>\n            </form>\n        </main>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}