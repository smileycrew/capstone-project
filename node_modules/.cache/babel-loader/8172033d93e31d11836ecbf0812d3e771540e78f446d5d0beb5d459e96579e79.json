{"ast":null,"code":"var _s = $RefreshSig$();\nimport { CreateStudent } from './forms/CreateStudent';\nimport { useEffect, useState } from \"react\";\nimport { fetchUserStudentById, fetchUserStudents } from '../services/studentServices';\nimport { ViewStudent } from './ViewStudent';\nimport { EditStudent } from './forms/EditStudent';\nimport { NavBar } from '../components/NavBar';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Students = ({\n  user\n}) => {\n  _s();\n  const [chosenStudent, setChosenStudent] = useState({});\n  const [students, setStudents] = useState([]);\n  const [createStudentToggle, setCreateStudentToggle] = useState(false);\n  const [editStudentToggle, setEditStudentToggle] = useState(false);\n  const [viewStudentToggle, setViewStudentToggle] = useState(false);\n  const handleToggle = () => {\n    setCreateStudentToggle(!createStudentToggle);\n  };\n  const handleFetchCalls = () => {\n    fetchUserStudents(user === null || user === void 0 ? void 0 : user.id).then(data => {\n      setStudents(data);\n    });\n  };\n  const handleViewStudentToggle = student => {\n    fetchUserStudentById(user === null || user === void 0 ? void 0 : user.id, student.id).then(data => {\n      setViewStudentToggle(!viewStudentToggle);\n      setChosenStudent(data[0]);\n    });\n  };\n  useEffect(() => {\n    handleFetchCalls();\n  }, [user === null || user === void 0 ? void 0 : user.id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n// <NavBar />\n// <CreateStudent user={user} createStudentToggle={createStudentToggle} setCreateStudentToggle={setCreateStudentToggle} handleFetchCalls={handleFetchCalls} />\n// <ViewStudent handleViewStudentToggle={handleViewStudentToggle} chosenStudent={chosenStudent} setChosenStudent={setChosenStudent} user={user} viewStudentToggle={viewStudentToggle} setViewStudentToggle={setViewStudentToggle} editStudentToggle={editStudentToggle} setEditStudentToggle={setEditStudentToggle} handleFetchCalls={handleFetchCalls} />\n// <EditStudent chosenStudent={chosenStudent} editStudentToggle={editStudentToggle} setEditStudentToggle={setEditStudentToggle} handleFetchCalls={handleFetchCalls} />\n// <main\n//     className=\"bg-white py-24 sm:py-32 mx-auto grid max-w-7xl gap-x-8 gap-y-20 px-6 lg:px-8 xl:grid-cols-3\">\n//     <section\n//         className=\"max-w-2xl\">\n//         <h1\n//             className=\"text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">\n//             My students\n//         </h1>\n//         <p\n//             className=\"mt-6 mb-6 text-lg leading-8 text-gray-600\">\n//             Please click on a name to see your student's information\n//         </p>\n//         <p\n//             className=\"mt-6 mb-6 text-lg leading-8 text-gray-600\">\n//             or add a new student\n//         </p>\n//         <button\n//             className=\"mt-5 rounded-md bg-indigo-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n//             onClick={handleToggle}>\n//             Add Student\n//         </button>\n//     </section>\n//     <ul\n//         className=\"grid gap-x-8 gap-y-12 sm:grid-cols-2 sm:gap-y-16 xl:col-span-2\">\n//         {students.map((student) => (\n//             <li\n//                 className=\"flex items-center gap-x-6\"\n//                 key={student?.id}>\n//                 <img\n//                     alt=\"\"\n//                     className=\"h-16 w-16 rounded-full\"\n//                     src={`https://api.dicebear.com/7.x/big-smile/svg?seed=${student.firstName}`} />\n//                 <h3\n//                     className=\"text-base font-semibold leading-7 tracking-tight text-gray-900\"\n//                     onClick={() => {\n//                         handleViewStudentToggle(student)\n//                     }}>\n//                     {student.firstName} {student.lastName}\n//                 </h3>\n//                 <p\n//                     className=\"text-sm font-semibold leading-6 text-indigo-600\">\n//                     <span>\n//                         Grade: {student.grade.grade}\n//                     </span>\n\n//                 </p>\n//             </li>\n//         ))}\n//     </ul>\n// </main>\n_s(Students, \"m/3K0oh2L8rLR2oXsv2FUUtqvPc=\");\n_c = Students;\nvar _c;\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"names":["CreateStudent","useEffect","useState","fetchUserStudentById","fetchUserStudents","ViewStudent","EditStudent","NavBar","Fragment","_Fragment","jsxDEV","_jsxDEV","Students","user","_s","chosenStudent","setChosenStudent","students","setStudents","createStudentToggle","setCreateStudentToggle","editStudentToggle","setEditStudentToggle","viewStudentToggle","setViewStudentToggle","handleToggle","handleFetchCalls","id","then","data","handleViewStudentToggle","student","_c","$RefreshReg$"],"sources":["/Users/edwin.moz/workspace/capstone-project/src/ParentViews/Students.js"],"sourcesContent":["import { CreateStudent } from './forms/CreateStudent'\nimport { useEffect, useState } from \"react\"\nimport { fetchUserStudentById, fetchUserStudents } from '../services/studentServices'\nimport { ViewStudent } from './ViewStudent'\nimport { EditStudent } from './forms/EditStudent'\nimport { NavBar } from '../components/NavBar'\n\nexport const Students = ({ user }) => {\n\n    const [chosenStudent, setChosenStudent] = useState({})\n    const [students, setStudents] = useState([])\n    const [createStudentToggle, setCreateStudentToggle] = useState(false)\n    const [editStudentToggle, setEditStudentToggle] = useState(false)\n    const [viewStudentToggle, setViewStudentToggle] = useState(false)\n\n    const handleToggle = () => {\n        setCreateStudentToggle(!createStudentToggle)\n    }\n\n    const handleFetchCalls = () => {\n        fetchUserStudents(user?.id).then((data) => {\n            setStudents(data)\n        })\n    }\n\n    const handleViewStudentToggle = (student) => {\n        fetchUserStudentById(user?.id, student.id).then((data) => {\n            setViewStudentToggle(!viewStudentToggle)\n            setChosenStudent(data[0])\n        })\n    }\n\n    useEffect(() => {\n        handleFetchCalls()\n    }, [user?.id])\n\n    return (\n        <>\n        </>\n    )\n}\n            // <NavBar />\n            // <CreateStudent user={user} createStudentToggle={createStudentToggle} setCreateStudentToggle={setCreateStudentToggle} handleFetchCalls={handleFetchCalls} />\n            // <ViewStudent handleViewStudentToggle={handleViewStudentToggle} chosenStudent={chosenStudent} setChosenStudent={setChosenStudent} user={user} viewStudentToggle={viewStudentToggle} setViewStudentToggle={setViewStudentToggle} editStudentToggle={editStudentToggle} setEditStudentToggle={setEditStudentToggle} handleFetchCalls={handleFetchCalls} />\n            // <EditStudent chosenStudent={chosenStudent} editStudentToggle={editStudentToggle} setEditStudentToggle={setEditStudentToggle} handleFetchCalls={handleFetchCalls} />\n            // <main\n            //     className=\"bg-white py-24 sm:py-32 mx-auto grid max-w-7xl gap-x-8 gap-y-20 px-6 lg:px-8 xl:grid-cols-3\">\n            //     <section\n            //         className=\"max-w-2xl\">\n            //         <h1\n            //             className=\"text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">\n            //             My students\n            //         </h1>\n            //         <p\n            //             className=\"mt-6 mb-6 text-lg leading-8 text-gray-600\">\n            //             Please click on a name to see your student's information\n            //         </p>\n            //         <p\n            //             className=\"mt-6 mb-6 text-lg leading-8 text-gray-600\">\n            //             or add a new student\n            //         </p>\n            //         <button\n            //             className=\"mt-5 rounded-md bg-indigo-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n            //             onClick={handleToggle}>\n            //             Add Student\n            //         </button>\n            //     </section>\n            //     <ul\n            //         className=\"grid gap-x-8 gap-y-12 sm:grid-cols-2 sm:gap-y-16 xl:col-span-2\">\n            //         {students.map((student) => (\n            //             <li\n            //                 className=\"flex items-center gap-x-6\"\n            //                 key={student?.id}>\n            //                 <img\n            //                     alt=\"\"\n            //                     className=\"h-16 w-16 rounded-full\"\n            //                     src={`https://api.dicebear.com/7.x/big-smile/svg?seed=${student.firstName}`} />\n            //                 <h3\n            //                     className=\"text-base font-semibold leading-7 tracking-tight text-gray-900\"\n            //                     onClick={() => {\n            //                         handleViewStudentToggle(student)\n            //                     }}>\n            //                     {student.firstName} {student.lastName}\n            //                 </h3>\n            //                 <p\n            //                     className=\"text-sm font-semibold leading-6 text-indigo-600\">\n            //                     <span>\n            //                         Grade: {student.grade.grade}\n            //                     </span>\n\n            //                 </p>\n            //             </li>\n            //         ))}\n            //     </ul>\n            // </main>"],"mappings":";AAAA,SAASA,aAAa,QAAQ,uBAAuB;AACrD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,oBAAoB,EAAEC,iBAAiB,QAAQ,6BAA6B;AACrF,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,MAAM,QAAQ,sBAAsB;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAElC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACmB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACqB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMuB,YAAY,GAAGA,CAAA,KAAM;IACvBL,sBAAsB,CAAC,CAACD,mBAAmB,CAAC;EAChD,CAAC;EAED,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC3BtB,iBAAiB,CAACS,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEc,EAAE,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAK;MACvCX,WAAW,CAACW,IAAI,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,uBAAuB,GAAIC,OAAO,IAAK;IACzC5B,oBAAoB,CAACU,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEc,EAAE,EAAEI,OAAO,CAACJ,EAAE,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAK;MACtDL,oBAAoB,CAAC,CAACD,iBAAiB,CAAC;MACxCP,gBAAgB,CAACa,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC;EAED5B,SAAS,CAAC,MAAM;IACZyB,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACb,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEc,EAAE,CAAC,CAAC;EAEd,oBACIhB,OAAA,CAAAF,SAAA,mBACE,CAAC;AAEX,CAAC;AACW;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAAK,EAAA,CAvFCF,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}